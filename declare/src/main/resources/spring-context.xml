<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<context:property-placeholder location="classpath:resource.properties"></context:property-placeholder>
	<context:component-scan base-package="com.global.**.controller,com.pactera.fems" >
		<context:exclude-filter type="regex" expression=".*Controller" />
	</context:component-scan>
	<context:annotation-config />
	
	<bean id="jdbcConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		scope="singleton" destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}"/>
		<property name="jdbcUrl" value="jdbc:sqlserver://10.200.1.20:1433;DatabaseName=AutoSet_RunTongTest" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}"/>

		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="${datasource.maxPoolSize}" />
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="${datasource.minPoolSize}" />
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="${datasource.initialPoolSize}" />
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="${datasource.maxIdleTime}" />
	</bean>
	
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="FEMS_DB"></property>
	</bean> -->
	
	<!-- 处理BLOB、CLOB字段 -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
	lazy-init="true" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--Spring 扫描除controller以外的Bean -->  
    <context:component-scan base-package="com.global">
        <context:exclude-filter type="annotation"  
            expression="org.springframework.stereotype.Controller" />  
    </context:component-scan>
	<context:component-scan base-package="com.pactera.fems.message.**"/>
    <tx:annotation-driven transaction-manager="txManager" />

	<!-- 定义事务传播属性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>

			<!-- 对查询方法不进行事务 -->
			<tx:method name="find*" propagation="NOT_SUPPORTED"
				read-only="true" />
			<tx:method name="insertLog" propagation="NOT_SUPPORTED" />
			<tx:method name="deleteLog" propagation="NOT_SUPPORTED" />
			<tx:method name="doIndividualLCYRegister" propagation="NOT_SUPPORTED" />
			<tx:method name="doIndividualLCYModify" propagation="NOT_SUPPORTED" />
			<tx:method name="doIndividualLCYCancel" propagation="NOT_SUPPORTED" />
			<tx:method name="doIndividualLCYMakeUp" propagation="NOT_SUPPORTED" />

			<!-- 对剩余的方法进行事务 -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/><!-- rollback-for="RuntimeException"  -->
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="transactionPointCut" expression="execution(* com.global..**.service.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointCut"
			advice-ref="txAdvice" />
	</aop:config>
	

   <!-- 加入Aspectj配置 -->  
   <aop:aspectj-autoproxy />  
   <bean id="logAspect" class="com.global.framework.system.log.LogAspect"></bean>

	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource"/>
	</bean>

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!--此处无错误，idea报红-->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="cacheSeconds" value="60"/>
	</bean>


</beans>