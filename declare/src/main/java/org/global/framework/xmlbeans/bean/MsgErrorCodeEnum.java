//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by Fernflower decompiler)
//

package org.global.framework.xmlbeans.bean;

public enum MsgErrorCodeEnum {
    ERRCODE_00000("00000", "操作成功"),
    ERRCODE_150003("150003", "数据库操作失败"),
    ERRCODE_150010("150010", "WEBLOGIC连接异常"),
    ERRCODE_400000("400000", "权限校验失败"),
    ERRCODE_400001("400001", "请求参数为空"),
    ERRCODE_400002("400002", "请求参数不合法"),
    ERRCODE_400003("400003", "调用WebService处理异常！"),
    ERRCODE_400004("400004", "请求服务<0>的业务参数格式错误，不能转换成JSON对象。请求参数是：<1>"),
    ERRCODE_400005("400005", "验证签名信息失败"),
    ERRCODE_400006("400006", "身份认证参数不合法"),
    ERRCODE_400007("400007", "业务参数格式不合法"),
    ERRCODE_400008("400008", "身份认证失败"),
    ERRCODE_400009("400009", "请求asone进行身份认证出错"),
    ERRCODE_440002("440002", "修改失败！"),
    ERRCODE_440009("440009", "保存过程中出现异常！"),
    ERRCODE_440010("440010", "保存失败！"),
    ERRCODE_420041("420041", "输入参数格式有误！"),
    ERRCODE_430029("430029", "业务类型不能为空"),
    ERRCODE_430061("430061", "<0>只能输入<1>"),
    ERRCODE_430062("430062", "<0>不允许输入特殊字符"),
    ERRCODE_430063("430063", "<0>输入格式错误"),
    ERRCODE_430064("430064", "修改失败"),
    ERRCODE_450001("450001", ""),
    ERRCODE_450002("450002", "提交失败，结汇金额大于本年额度内剩余可结汇金额!可凭相关真实性证明材料办理个人结售汇业务。"),
    ERRCODE_450003("450003", "币种不能为人民币"),
    ERRCODE_450004("450004", "当日累计现钞结汇金额超限，请审核现钞来源证明材料，并在备注栏注明！"),
    ERRCODE_450005("450005", "交易主体对应结汇资金属性代码错误"),
    ERRCODE_450006("450006", "业务类型为通过支付机构的结汇时，结汇资金形态限定为“02-汇入资金（包括外汇票据）”"),
    ERRCODE_450007("450007", "提交失败，购汇金额大于本年额度内剩余可购汇金额!可凭相关真实性证明材料办理个人结售汇业务。"),
    ERRCODE_450008("450008", "购汇提钞金额、汇出资金（包括外汇票据）金额、存入个人外汇账户金额、旅行支票金额不能全部为空"),
    ERRCODE_450009("450009", "购汇提钞金额+汇出资金（包括外汇票据）金额+存入个人外汇账户金额+旅行支票金额 不等于购汇金额"),
    ERRCODE_450010("450010", ""),
    ERRCODE_450011("450011", "交易主体对应购汇资金属性代码错误"),
    ERRCODE_450012("450012", "当业务类型为“通过支付机构的购汇”时，“购汇金额”应该等于“汇出资金(包括外汇票据)金额”"),
    ERRCODE_450013("450013", "业务参号不存在"),
    ERRCODE_450014("450014", "撤销后的交易不能再进行修改和撤销"),
    ERRCODE_450015("450015", "该笔交易已撤销，不返回信息"),
    ERRCODE_450016("450016", "只能查询本年内的结汇业务数据"),
    ERRCODE_450017("450017", "查询条件不能全部为空"),
    ERRCODE_450018("450018", "<0>在代码表中不存在"),
    ERRCODE_450019("450019", "购汇金额大于境外个人小额购汇单笔限额<0>美元，备注栏不能为空，需要输入凭证信息”"),
    ERRCODE_450020("450020", "单笔现钞结汇金额超过等值5000美元，请审核现钞来源证明材料，并在备注栏注明！"),
    ERRCODE_450021("450021", "单笔提钞超过限额"),
    ERRCODE_450022("450022", "业务类型是“通过支付机构的购汇”时，渠道应为“支付机构”"),
    ERRCODE_450023("450023", "业务类型不是“通过支付机构的购汇”时，渠道应为“柜台渠道”"),
    ERRCODE_450024("450024", ""),
    ERRCODE_450025("450025", "无法获取境外个人小额购汇单笔限额"),
    ERRCODE_450026("450026", "无法获取单日累计限额"),
    ERRCODE_450027("450027", "提交金额超过当日累计限额"),
    ERRCODE_450028("450028", "支付机构代码必须存在于支付机构准入表"),
    ERRCODE_450029("450029", "币种应为银行币种专用代码"),
    ERRCODE_450030("450030", "外汇局没有该币种的折算率，请按美元录入，并在备注中说明实际币种"),
    ERRCODE_450031("450031", "购汇资金属性与业务类型不匹配"),
    ERRCODE_450032("450032", "获得购汇资金属性信息失败"),
    ERRCODE_450033("450033", "<0>不能选择将来的时间"),
    ERRCODE_450034("450034", "查询银行外汇局信息失败"),
    ERRCODE_450035("450035", "只能查询本银行网点的结汇信息"),
    ERRCODE_450036("450036", "只能查询本年内的未撤销的交易记录"),
    ERRCODE_450037("450037", "业务参号作为查询条件时，其他查询条件应置空"),
    ERRCODE_450038("450038", "结汇资金属性与业务类型不匹配"),
    ERRCODE_450039("450039", "获得结汇资金属性信息失败"),
    ERRCODE_450040("450040", "业务办理时间必须为当天时间"),
    ERRCODE_450061("450061", "购汇提钞金额应大于或等于零"),
    ERRCODE_450062("450062", "购汇金额应大于零"),
    ERRCODE_450063("450063", "结汇金额折算美元后不能大于本年额度内剩余可结汇金额折美元"),
    ERRCODE_450064("450064", "只能修改本银行网点的购汇信息"),
    ERRCODE_450065("450065", "修改原因为“其他”时，修改原因说明不允许为空"),
    ERRCODE_450066("450066", "根据业务参号获得证件类型、证件号码、国家地区代码信息失败，业务参号：<0>"),
    ERRCODE_450067("450067", "只能撤消本银行网点的结售汇信息"),
    ERRCODE_450068("450068", "只能修改本银行网点的结汇信息"),
    ERRCODE_450069("450069", "业务类型为05-通过支付机构的结购汇时，业务办理渠道代码必须为32-支付机构"),
    ERRCODE_450070("450070", "该交易主体分类状态为“正常”，不需要提示风险提示函或告知书！"),
    ERRCODE_450071("450071", "该交易主体已经提示风险提示函或告知书！"),
    ERRCODE_511024("511024", "不是有效的数据"),
    ERRCODE_511025("511025", "日期格式不正确！"),
    ERRCODE_550051("550051", "<0>金额格式错误！"),
    ERRCODE_550052("550052", "<0>金额不能为空！"),
    ERRCODE_550054("550054", "<0>长度过长！"),
    ERRCODE_550056("550056", "<0>不能为空！"),
    ERRCODE_550057("550057", "<0>格式错误！"),
    ERRCODE_560000("560000", "请求流水号重复"),
    ERRCODE_810028("810028", "<0>币种折美元汇率不存在！"),
    ERRCODE_810029("810029", "<0>长度不再要求的区间内，要求区间为<1>至<2>"),
    ERRCODE_666666("666666", "包含非法请求参数，请求已被拒绝"),
    ERRCODE_870000("870000", "获取转换工厂失败"),
    ERRCODE_870001("870001", "用xslt转换失败"),
    ERRCODE_870002("870002", "xml通过schema校验失败"),
    ERRCODE_870003("870003", "xml转换json失败"),
    ERRCODE_870004("870004", "DataCenter转换XML失败"),
    ERRCODE_870005("870005", "通过XSLT过滤XML字段失败"),
    ERRCODE_870006("870006", "xml校验失败"),
    ERRCODE_870007("870007", "构建文档结构出错"),
    ERRCODE_870008("870008", "参数不合法"),
    ERRCODE_899080("899080", "不存在对应的折算率！"),
    ERRCODE_900000("900000", "执行数据库更新操作时出现错误"),
    ERRCODE_900001("900001", "调用数据库存储过程时出现错误"),
    ERRCODE_900002("900002", "执行数据库批量更新操作时出现错误"),
    ERRCODE_900004("900004", "执行数据库查询操作时出现错误"),
    ERRCODE_900005("900005", "执行业务操作时出现错误"),
    ERRCODE_900006("900006", "执行数据库持久化操作时出现错误"),
    ERRCODE_900007("900007", "执行数据转换过程中出现错误"),
    ERRCODE_999998("999998", "组织错误信息时出错"),
    ERRCODE_999999("999999", "系统错误"),
    ERRCODE_450072("999999", "只能撤销本银行网点的购汇信息");

    private String code;
    private String value;

    private MsgErrorCodeEnum(String code, String value) {
        this.code = code;
        this.value = value;
    }

    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getValue() {
        return this.value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    public static String getValueByCode(String code) {
        MsgErrorCodeEnum[] arr$ = values();
        int len$ = arr$.length;

        for (int i$ = 0; i$ < len$; ++i$) {
            MsgErrorCodeEnum _enum = arr$[i$];
            if (code.equals(_enum.getCode())) {
                return _enum.getValue();
            }
        }

        return null;
    }
}
